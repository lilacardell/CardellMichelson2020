country=revalue(country,c("Democratic Republic of the Congo"="DR Congo","Central African Republic"="CAR")))
#second season (wholesale)
wholesale2=season_country%>%
filter(market_type=="Wholesale"&n.yrs2>0)%>%
dplyr::select(country,years,n.mkt,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2,
pct_season2_c,e.returns2_c,pos.returns2_c,neg.returns2_c)%>%
rbind(sum_wholesale2)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")),
country=revalue(country,c("Democratic Republic of the Congo"="DR Congo","Central African Republic"="CAR")))
header<-c("Country","Years","Markets","Market-Years",
"Frequency of Negative Returns","Average Total Returns","Average Positive Returns","Average Negative Returns",
"Frequency of Negative Returns","Average Total Returns","Average Positive Returns","Average Negative Returns")
print=xtable(retail1,type="latex")
names(print)<-header
print(print,file=paste0("./retailprices_main_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(retail2,type="latex")
names(print)<-header
print(print,file=paste0("./retailprices_second_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(wholesale1,type="latex")
names(print)<-header
print(print,file=paste0("./wholesaleprices_main_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(wholesale2,type="latex")
names(print)<-header
print(print,file=paste0("./wholesaleprices_second_)",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
rm(list=ls(pattern="sum_"),retail1,retail2,wholesale1,wholesale2,print,header)
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output")
#summary datasets for main season
sum_retail1=season_country%>%
filter(market_type=="Retail")%>%
dplyr::select(country,years,n.mkt,contains("1"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1,
pct_season1_c,e.returns1_c,pos.returns1_c,neg.returns1_c)
sum_wholesale1=season_country%>%
filter(market_type=="Wholesale")%>%
dplyr::select(country,years,n.mkt,contains("1"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1,
pct_season1_c,e.returns1_c,pos.returns1_c,neg.returns1_c)
#main season (retail)
retail1=season_country%>%
filter(market_type=="Retail")%>%
dplyr::select(country,years,n.mkt,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1,
pct_season1_c,e.returns1_c,pos.returns1_c,neg.returns1_c)%>%
rbind(sum_retail1)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")),
country=revalue(country,c("Democratic Republic of the Congo"="DR Congo","Central African Republic"="CAR")))
#main season (wholesale)
wholesale1=season_country%>%
filter(market_type=="Wholesale")%>%
dplyr::select(country,years,n.mkt,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1,
pct_season1_c,e.returns1_c,pos.returns1_c,neg.returns1_c)%>%
rbind(sum_wholesale1)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")),
country=revalue(country,c("Democratic Republic of the Congo"="DR Congo","Central African Republic"="CAR")))
#summary datasets for second season
sum_retail2=season_country%>%
filter(market_type=="Retail")%>%
dplyr::select(country,years,n.mkt,contains("2"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2,
pct_season2_c,e.returns2_c,pos.returns2_c,neg.returns2_c)
sum_wholesale2=season_country%>%
filter(market_type=="Wholesale")%>%
dplyr::select(country,years,n.mkt,contains("2"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2,
pct_season2_c,e.returns2_c,pos.returns2_c,neg.returns2_c)
#second season (retail)
retail2=season_country%>%
filter(market_type=="Retail"&n.yrs2>0)%>%
dplyr::select(country,years,n.mkt,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2,
pct_season2_c,e.returns2_c,pos.returns2_c,neg.returns2_c)%>%
rbind(sum_retail2)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")),
country=revalue(country,c("Democratic Republic of the Congo"="DR Congo","Central African Republic"="CAR")))
#second season (wholesale)
wholesale2=season_country%>%
filter(market_type=="Wholesale"&n.yrs2>0)%>%
dplyr::select(country,years,n.mkt,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2,
pct_season2_c,e.returns2_c,pos.returns2_c,neg.returns2_c)%>%
rbind(sum_wholesale2)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")),
country=revalue(country,c("Democratic Republic of the Congo"="DR Congo","Central African Republic"="CAR")))
header<-c("Country","Years","Markets","Market-Years",
"Frequency of Negative Returns","Average Total Returns","Average Positive Returns","Average Negative Returns",
"Frequency of Negative Returns","Average Total Returns","Average Positive Returns","Average Negative Returns")
print=xtable(retail1,type="latex")
names(print)<-header
print(print,file=paste0("./retailprices_main_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(retail2,type="latex")
names(print)<-header
print(print,file=paste0("./retailprices_second_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(wholesale1,type="latex")
names(print)<-header
print(print,file=paste0("./wholesaleprices_main_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(wholesale2,type="latex")
names(print)<-header
print(print,file=paste0("./wholesaleprices_second_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
rm(list=ls(pattern="sum_"),retail1,retail2,wholesale1,wholesale2,print,header)
View(season)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE,
root.dir = "C:/Users/lilac2/Box/GIEWS_Project/GIEWS/R"
)
options(scipen=999)
set.seed(101484)
###  Check for and load Packages   ###
#writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
## Clear worksace
rm(list = ls())
gc()
## This function will check if a package is installed, and if not, install it
pkgTest  =  function(x) {
if (!require(x, character.only = TRUE))
{
install.packages(x, dep = TRUE)
if(!require(x, character.only = TRUE)) stop("Package not found")
}
}
## These lines load the required packages
packages  =  c('data.table','tidyverse','haven','foreign','stargazer','lubridate','knitr','xtable','tables','kableExtra','car','stringr','styler','readxl','magrittr','sjmisc','ggplot2','ggpubr','ggnewscale','bookdown','scales','quantmod','distr6','plyr','esquisse','forcats','ggrepel','gdata','stringdist','SparseM','quantreg','mfx','erer','margins','moments',"lemon",'rnaturalearth')
## you can add more packages here
lapply(packages, pkgTest)
rm(packages,pkgTest)
setwd("c:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final")
maize_prices<-read_dta("./Data/maizeprices_260221.dta")
#Reminder: note h1x,h2x,p1x,p2x if planting or harvest seasons that cross the end of the year, e.g. harvest starts in Dec and ends in Jan
maize<-maize_prices%>%
filter(!is.na(price_real))%>% #mostly 2020 data and Somalia which is missing CPI data
mutate(endharvest1=if_else(month==main_harvest_end,main_harvest_end,as.numeric(NA)),
endharvest2=if_else(month==second_harvest_end,second_harvest_end,as.numeric(NA)),
yyyymm=paste(year,formatC(month,width=2,flag="0"),sep="-"))%>%
mutate(monthtype1=if_else(note_p1x==0&month>=main_plant_start & month<=main_plant_end,paste0("planting1_",year),#for nonwrapped planting season
if_else(note_p1x==1&month>=main_plant_start,paste0("planting1_",year), #for months at the end of the year
if_else(note_p1x==1&month<=main_plant_end,paste0("planting1_",year-1), #assume months at the beginning of the year belong with prior year's planting season
if_else(note_h1x==0&month>=main_harvest_start & month<=main_harvest_end,paste0("harvest1_",year),#for nonwrapped harvest season
if_else(note_h1x==1&month>=main_harvest_start,paste0("harvest1_",year), #for months at the end of the year
if_else(note_h1x==1&month<=main_harvest_end,paste0("harvest1_",year-1),"")))))),#assume months at the beginning of the year belong with prior year's harvest season
monthtype2=if_else(note_p2x==0&month>=second_plant_start & month<=second_plant_end,paste0("planting2_",year), #for nonwrapped planting season
if_else(note_p2x==1&month>=second_plant_start,paste0("planting2_",year), #for months at the end of the year
if_else(note_p2x==1&month<=second_plant_end,paste0("planting2_",year-1), #for months at the beginning of the year
if_else(note_h2x==0&month>=second_harvest_start & month<=second_harvest_end,paste0("harvest2_",year),#for nonwrapped harvest season
if_else(note_h2x==1&month>=second_harvest_start,paste0("harvest2_",year), #for months at the end of the year
if_else(note_h2x==1&month<=second_harvest_end,paste0("harvest2_",year-1),"")))))))%>% #for months at the beginning of the year
separate(commodity,c("commodity","market_type"), " - ")%>%
mutate(date=parse_date_time(yyyymm,"ym"))%>%
dplyr::select(country,region,market,lat,lon,commodity,market_type,currency,year,month,price_real,yield_kgha,monthtype1,monthtype2,note_1,note_2,endharvest1,endharvest2,date)
yield=maize%>%
dplyr::select(country,year,yield_kgha)%>%
group_by(country,year)%>%
slice(1)%>%
ungroup()
#Note_1/2==1 means main/second planting season occurs before main/second harvest season in a calendar year,as analysis is harvest==>planting/lean, so shift planting season crop year -1
con1 = maize%>%
separate(monthtype1,c("monthtype1","cropyear"),"_")%>%
mutate(cropyear=as.numeric(cropyear))%>%
filter(!is.na(cropyear))%>% #find all the planting or harvest months for the main season
arrange(country,commodity,market_type,market,year,month)%>%
group_by(country,commodity,market_type,market,cropyear,monthtype1)%>% #group by crop year to find the price within harvest/planting months for that crop year
dplyr::summarise(minprice=min(price_real,na.rm=TRUE),maxprice=max(price_real,na.rm=TRUE),
endprice=last(price_real,na.rm=TRUE),note_1=mean(note_1))%>%
ungroup()%>%
mutate(cropyear=if_else(note_1==1 & monthtype1=="planting1",cropyear-1,cropyear))%>% #shift planting season back for crossed crop years so that returns are from harvest to subsequent planting season
unite("temp",c("country","market","commodity","market_type"),sep="_")%>%
pivot_wider(names_from = monthtype1,values_from=c("minprice","maxprice","endprice"))%>%
dplyr::rename(hmin1=minprice_harvest1,hend1=endprice_harvest1,
pmax1=maxprice_planting1)%>%
dplyr::select(temp,cropyear,hmin1,hend1,pmax1)%>%
mutate(returns1_c=(pmax1-hmin1)/hmin1,returns1=(pmax1-hend1)/hend1,
noarb1_c=if_else(pmax1<=hmin1,1,0),noarb1=if_else(pmax1<=hend1,1,0))%>% #calculate returns from last harvest month and minimum harvest price
filter(!is.na(returns1))
#7500 observations
#repeat for second maize season
con2 = maize%>%
separate(monthtype2,c("monthtype2","cropyear"),"_")%>%
mutate(cropyear=as.numeric(cropyear))%>%
filter(!is.na(cropyear))%>% #find all the planting or harvest months for the second season
arrange(country,commodity,market_type,market,year,month)%>%
group_by(country,commodity,market_type,market,cropyear,monthtype2)%>% #group by crop year to find the price within harvest/planting months for that crop year
dplyr::summarise(minprice=min(price_real,na.rm=TRUE),maxprice=max(price_real,na.rm=TRUE),
endprice=last(price_real,na.rm=TRUE),note_2=mean(note_2))%>%
ungroup()%>%
mutate(cropyear=if_else(note_2==1 & monthtype2=="planting2",cropyear-1,cropyear))%>% #shift planting season back for crossed crop years so that returns are from harvest to subsequent planting season
unite("temp",c("country","market","commodity","market_type"),sep="_")%>%
pivot_wider(names_from = monthtype2,values_from=c("minprice","maxprice","endprice"))%>%
dplyr::rename(hmin2=minprice_harvest2,hend2=endprice_harvest2,
pmax2=maxprice_planting2)%>%
dplyr::select(temp,cropyear,hmin2,hend2,pmax2)%>%
mutate(returns2_c=(pmax2-hmin2)/hmin2,returns2=(pmax2-hend2)/hend2,
noarb2_c=if_else(pmax2<=hmin2,1,0),noarb2=if_else(pmax2<=hend2,1,0))%>% #calculate returns from last harvest month and minimum harvest price
filter(!is.na(returns2))
#2000 observations
returns_con=full_join(con1,con2,by=c("temp","cropyear"))%>%
separate("temp",c("country","market","commodity","market_type"),sep="_")%>%
arrange(country,market,commodity,market_type,cropyear)%>%
left_join(yield,by=c("country","cropyear"="year"))
rm(con1,con2,yield)
#isolate the month of harvest end for the main season and determine the price quintile for the country and market type
hend1=maize%>%
filter(is.finite(endharvest1))%>%
mutate(hend_date1=date,hend_price1=price_real)%>%
dplyr::select(country,region,market,commodity,market_type,contains("hend"))%>%
group_by(country,market_type)%>%
dplyr::mutate(z_h1=scale(hend_price1),h1_d=as.factor(paste0("d",ntile(hend_price1,10))),h1_q=paste0("q",ntile(hend_price1,5)))%>%
ungroup()
decile=c("d1","d2","d3","d4","d5","d6","d7","d8","d9","d10")
hend1$h1_d<-reorder.factor(hend1$h1_d,new.order=decile)
#isolate the month of harvest end for the second season and determine the price quintile for the country and market type
hend2=maize%>%
filter(is.finite(endharvest2))%>%
mutate(hend_date2=date,hend_price2=price_real)%>%
dplyr::select(country,region,market,commodity,market_type,contains("hend"))%>%
group_by(country,market_type)%>%
dplyr::mutate(z_h2=scale(hend_price2),h2_d=as.factor(paste0("d",ntile(hend_price2,10))),h2_q=paste0("q",ntile(hend_price2,5)))%>%
ungroup()
hend2$h2_d<-reorder.factor(hend2$h2_d,new.order=decile)
#rejoin the harvest month end and calculate returns for every month from the harvest end, keeping only the months within a year after harvest, and calculate returns
returns_dur1=maize%>%
left_join(hend1,by=c("country","region","market","commodity","market_type"))%>%
mutate(duration1=interval(hend_date1,date),returns1=(price_real-hend_price1)/hend_price1,arb1=if_else(price_real>hend_price1,1,0))%>%
mutate(duration1=duration1%/%months(1),noarb1=if_else(arb1==0,1,0))%>%
filter(duration1%in%1:12)%>%
dplyr::select(-lat,-lon,-currency,-note_1,-note_2,-endharvest1,-endharvest2,-monthtype1,-monthtype2)
#repeat for second season
returns_dur2=maize%>%
left_join(hend2,by=c("country","region","market","commodity","market_type"))%>%
mutate(duration2=interval(hend_date2,date),returns2=(price_real-hend_price2)/hend_price2,arb2=if_else(price_real>hend_price2,1,0))%>%
mutate(duration2=duration2%/%months(1),noarb2=if_else(arb2==0,1,0))%>%
filter(duration2%in%1:12)%>%
dplyr::select(-lat,-lon,-currency,-note_1,-note_2,-endharvest1,-endharvest2,-monthtype1,-monthtype2)
#rejoin the returns
returns_dur=full_join(returns_dur1,returns_dur2,by=c("country","region","market","commodity","market_type","year","month","price_real","yield_kgha","date"))%>%
arrange(country,market,commodity,year,month)
rm(hend1,hend2,returns_dur1,returns_dur2)
skew_mkt=maize%>%
group_by(country,market,market_type)%>%
dplyr::summarise(cv=(mean(price_real)/sd(price_real)),
skew=skewness(price_real),kurt=kurtosis(price_real),nobs=n())%>%
mutate(n_skew=if_else(skew<=0,1,0),n_kurt=if_else(kurt<=0,1,0))%>%
ungroup()
#no evidence of negative kurtosis in any markets
skew_country=skew_mkt%>%
group_by(country,market_type)%>%
filter(n()>1)%>%
dplyr::summarise(across(c(cv,kurt,skew),mean,na.rm=TRUE),across(starts_with("n"),sum,na.rm=TRUE),n_mkt=n())%>%
dplyr::mutate(n_skew_pct=n_skew/n_mkt,n_kurt_pct=n_kurt/n_mkt)%>%
dplyr::select(country,market_type,n_mkt,nobs,cv,skew,n_skew_pct,kurt,n_kurt_pct)%>%
dplyr::mutate(across(c(n_skew_pct,n_kurt_pct),~paste0(sprintf("%.1f",.*100),"%")),
across(c(cv,skew,kurt),round,3))%>%
ungroup()
print=xtable(skew_country,type="latex")
names(print)<-c("Country","Market Type","Markets","Market-Months","Coefficient of \n Variation","Average Market Skewness ","Percent Markets Negative Skew", "Kurtosis","Percent Markets Negative Kurtosis")
print(print,file="C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/skew_kurt_022521.tex",include.rownames=FALSE)
rm(skew_mkt,skew_country,print)
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/")
markets=maize%>%
dplyr::select(country,market,market_type,lat,lon)%>%
mutate(country=revalue(country,c("DR Congo"="Democratic Republic of the Congo","CAR"="Central African Republic")))
countries=markets%>%
group_by(country)%>%
dplyr::summarise(across(lat:lon,mean))
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(data = world) +
geom_sf(fill="antiquewhite") +
geom_point(data=markets, aes(x = lon, y = lat,fill=market_type), size = 1,
shape = 23)+
geom_label_repel(data = countries, aes(x=lon,y=lat, label = country), size =2,nudge_x= 0.15,
direction    = "y",
segment.size = 0.2)+
coord_sf(xlim = c(-20,50), ylim = c(-35, 25), expand = FALSE)+
theme(panel.grid.major = element_line(color = gray(0.5), linetype = "dashed",
size = 0.25), panel.background = element_rect(fill = "aliceblue"),
legend.position=c(0.35,0.35),legend.background = element_rect(fill="aliceblue"),legend.title=element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),axis.title.x=element_blank(),
axis.text.y=element_blank(),axis.ticks.y=element_blank(),axis.title.y=element_blank())
ggsave("market_map.PNG",width=12,height=9)
rm(markets,countries,world)
## Duration (FULL SET) data set for primary maize season, keep markets with at least two years of data for each duration
duration1=returns_dur%>%
filter(is.finite(returns1))%>%
group_by(country,commodity,market_type,market,duration1)%>%
filter(n()>1)%>%#Mauritania drops out
ungroup()
#Duration (MARKET LEVEL)
duration1_mkt=duration1%>%
group_by(country,commodity,market_type,market,duration1)%>%
dplyr::summarise(returns_m=mean(returns1),
n_season=n(),n_neg=sum(noarb1))%>%
ungroup()%>%
mutate(pct_season=n_neg/n_season)%>%
dplyr::select(-n_neg)
## Seasonal returns for primary and second maize season data set, keep markets with at least two cropyears
season1=returns_con%>%
filter(is.finite(returns1))%>%
group_by(country,commodity,market_type,market)%>%
filter(n()>1)%>%#Mauritania drops out
ungroup()%>%
dplyr::select(1:5,returns1,returns1_c,noarb1,noarb1_c,yield_kgha)
season2=returns_con%>%
filter(is.finite(returns2))%>%
group_by(country,commodity,market_type,market)%>%
filter(n()>1)%>%
ungroup()%>%
dplyr::select(1:5,returns2,returns2_c,noarb2,noarb2_c,yield_kgha)
season=season1%>%
full_join(season2,by=c("country","commodity","market","market_type","yield_kgha","cropyear"))%>%
filter(!(market=="Dar Es Salaam"&cropyear==2009&market_type=="Wholesale"))
#drop the season with the 128,000% return in wholesale market in Tanzania
#Seasonal returns (MARKET LEVEL)
season_mkt=season%>%
group_by(country,commodity,market_type,market)%>%
dplyr::summarise(across(starts_with("returns"),list(e=mean,n=n_distinct),na.rm=TRUE,.names = "{.fn}.{.col}"),
across(starts_with("noarb"),~sum(.x,na.rm=TRUE),.names = "n_season_{.col}"))%>%
ungroup()%>%
mutate(pct_season1=n_season_noarb1/n.returns1,pct_season1_c=n_season_noarb1_c/n.returns1_c,
pct_season2=n_season_noarb2/n.returns2,pct_season2_c=n_season_noarb2_c/n.returns2_c)%>%
dplyr::select(-contains("n_"))
#%>%dplyr::rename(n_season=n.returns1)
#973 markets
pctp=function(x){
y=mean(x[x>0],na.rm=TRUE)
}
pctn=function(x){
y=mean(x[x<=0],na.rm=TRUE)
}
#Seasonal returns (COUNTRYLEVEL)
season_country=season%>%
group_by(country,commodity,market_type)%>%
dplyr::summarise(across(starts_with("returns"),list(e=mean,pos=~pctp(.x),neg=~pctn(.x)),na.rm=TRUE,.names = "{.fn}.{.col}"),
across(starts_with("noarb"),~sum(.x,na.rm=TRUE),.names = "n_season_{.col}"),
n.mkt=n_distinct(market),n.yrs1=length(market[is.finite(returns1)]),n.yrs2=length(market[is.finite(returns2)]))%>%
ungroup()%>%
mutate(pct_season1=n_season_noarb1/n.yrs1,pct_season1_c=n_season_noarb1_c/n.yrs1,
pct_season2=n_season_noarb2/n.yrs2,pct_season2_c=n_season_noarb2_c/n.yrs2)%>%
dplyr::select(-starts_with("n_"))
#make a list of years covered
all_years=season%>%
arrange(country,market_type,cropyear)%>%
group_by(country,market_type)%>%
dplyr::summarise(minyr=min(cropyear),maxyr=max(cropyear))%>%
mutate(years=paste(minyr,maxyr,sep="-"))%>%
dplyr::select(country,market_type,years)
#add list of years to country data
season_country=season_country%>%
left_join(all_years,by=c("country","market_type"))%>%
dplyr::select(country,commodity,market_type,years,n.mkt,contains("1"),contains("2"))
rm(all_years,season1,season2)
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output")
#summary datasets for main season
sum_retail1=season_country%>%
filter(market_type=="Retail")%>%
dplyr::select(country,years,n.mkt,contains("1"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1,
pct_season1_c,e.returns1_c,pos.returns1_c,neg.returns1_c)
sum_wholesale1=season_country%>%
filter(market_type=="Wholesale")%>%
dplyr::select(country,years,n.mkt,contains("1"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1,
pct_season1_c,e.returns1_c,pos.returns1_c,neg.returns1_c)
#main season (retail)
retail1=season_country%>%
filter(market_type=="Retail")%>%
dplyr::select(country,years,n.mkt,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1,
pct_season1_c,e.returns1_c,pos.returns1_c,neg.returns1_c)%>%
rbind(sum_retail1)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")),
country=revalue(country,c("Democratic Republic of the Congo"="DR Congo","Central African Republic"="CAR")))
#main season (wholesale)
wholesale1=season_country%>%
filter(market_type=="Wholesale")%>%
dplyr::select(country,years,n.mkt,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1,
pct_season1_c,e.returns1_c,pos.returns1_c,neg.returns1_c)%>%
rbind(sum_wholesale1)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")),
country=revalue(country,c("Democratic Republic of the Congo"="DR Congo","Central African Republic"="CAR")))
#summary datasets for second season
sum_retail2=season_country%>%
filter(market_type=="Retail")%>%
dplyr::select(country,years,n.mkt,contains("2"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2,
pct_season2_c,e.returns2_c,pos.returns2_c,neg.returns2_c)
sum_wholesale2=season_country%>%
filter(market_type=="Wholesale")%>%
dplyr::select(country,years,n.mkt,contains("2"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2,
pct_season2_c,e.returns2_c,pos.returns2_c,neg.returns2_c)
#second season (retail)
retail2=season_country%>%
filter(market_type=="Retail"&n.yrs2>0)%>%
dplyr::select(country,years,n.mkt,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2,
pct_season2_c,e.returns2_c,pos.returns2_c,neg.returns2_c)%>%
rbind(sum_retail2)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")),
country=revalue(country,c("Democratic Republic of the Congo"="DR Congo","Central African Republic"="CAR")))
#second season (wholesale)
wholesale2=season_country%>%
filter(market_type=="Wholesale"&n.yrs2>0)%>%
dplyr::select(country,years,n.mkt,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2,
pct_season2_c,e.returns2_c,pos.returns2_c,neg.returns2_c)%>%
rbind(sum_wholesale2)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")),
country=revalue(country,c("Democratic Republic of the Congo"="DR Congo","Central African Republic"="CAR")))
header<-c("Country","Years","Markets","Market-Years",
"Frequency of Negative Returns","Average Total Returns","Average Positive Returns","Average Negative Returns",
"Frequency of Negative Returns","Average Total Returns","Average Positive Returns","Average Negative Returns")
print=xtable(retail1,type="latex")
names(print)<-header
print(print,file=paste0("./retailprices_main_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(retail2,type="latex")
names(print)<-header
print(print,file=paste0("./retailprices_second_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(wholesale1,type="latex")
names(print)<-header
print(print,file=paste0("./wholesaleprices_main_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(wholesale2,type="latex")
names(print)<-header
print(print,file=paste0("./wholesaleprices_second_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
rm(list=ls(pattern="sum_"),retail1,retail2,wholesale1,wholesale2,print,header)
View(season_mkt)
View(season_country)
season_mkt=season%>%
group_by(country,commodity,market_type,market)%>%
dplyr::summarise(across(starts_with("returns"),list(e=mean),na.rm=TRUE,.names = "{.fn}.{.col}"),
across(starts_with("noarb"),~sum(.x,na.rm=TRUE),.names = "n_season_{.col}"),
n.yrs1=length(cropyear[is.finite(returns1)]),n.yrs2=length(cropyear[is.finite(returns2)]))%>%
ungroup()%>%
mutate(pct_season1=n_season_noarb1/n.yrs1,pct_season1_c=n_season_noarb1_c/n.yrs1,
pct_season2=n_season_noarb2/n.yrs2,pct_season2_c=n_season_noarb2_c/n.yrs2)%>%
dplyr::select(-contains("n_"))
cb1=season_mkt%>%
filter(market_type=="Retail"&is.finite(e.returns1))
View(cb1)
cb1plot=ggplot()+
geom_point(data=cb1,aes(x=pct_season1*100,y=e.returns1*100,size=n.yrs1))+ scale_y_continuous(name="Average returns to storage (%)",limits=c(-50,200),breaks=seq(-50,200,50),expand=c(0,0)) +  scale_x_continuous(name="% of seasons with negative returns",limits=c(0,100),breaks=seq(0,100,20)) +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),panel.grid.major = element_line(color="lightgray"),legend.position = c(1, 1),legend.justification = c(1, 1),
axis.line = element_line(color="black"))+guides(size = guide_legend(reverse = TRUE))+
geom_hline(yintercept=0,color="darkgray")+ scale_size(range = c(0.5,3),breaks=c(2,4,8,12,16,20),name="Number of \n market-years")
print(cb1plot)
cb1plot=ggplot()+
geom_point(data=cb1,aes(x=pct_season1*100,y=e.returns1*100,size=n.yrs1))+ scale_y_continuous(name="Average returns to storage (%)",limits=c(-50,200),breaks=seq(-50,200,50),expand=c(0,0)) +  scale_x_continuous(name="% of seasons with negative returns",limits=c(0,100),breaks=seq(0,100,20)) +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),panel.grid.major = element_line(color="lightgray"),legend.position = c(1, 1),legend.justification = c(1, 1),
axis.line = element_line(color="black"))+guides(size = guide_legend(reverse = TRUE))+
geom_hline(yintercept=0,color="darkgray")+ scale_size(range = c(0.5,3),breaks=c(2,4,8,12,16,20),name="Number of \n market-years")
print(cb1plot)
cb1plot
cb1plot=ggplot()+
geom_point(data=cb1,aes(x=pct_season1*100,y=e.returns1*100,size=n.yrs1))+ scale_y_continuous(name="Average returns to storage (%)",limits=c(-50,150),breaks=seq(-50,150,50),expand=c(0,0)) +  scale_x_continuous(name="% of seasons with negative returns",limits=c(0,100),breaks=seq(0,100,20)) +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),panel.grid.major = element_line(color="lightgray"),legend.position = c(1, 1),legend.justification = c(1, 1),
axis.line = element_line(color="black"))+guides(size = guide_legend(reverse = TRUE))+
geom_hline(yintercept=0,color="darkgray")+ scale_size(range = c(0.5,3),breaks=c(2,4,8,12,16,20),name="Number of \n market-years")
print(cb1plot)
cb1plot
neg_all=cb%>%filter(pct_season1==1) #5
nrow(cb1$pct_season1==1)
sum(cb1$pct_season1==1)
sum(cb1$pct_season1==0)
neg_all=sum(cb1$pct_season1==1) #22 are always negative
pos_all=sum(cb1$pct_season1==0) #168 are always positive
sum(unique(neg_all$country))
neg_country=unique(neg_all$country)) #4 different countries
neg_country=unique(neg_all$country) #4 different countries
neg_all=cb1%>%filter(pct_season1==1) #5
pos_all=cb1%>%filter(pct_season1==0) #191
neg_country=unique(neg_all$country) #4 different countries
pos_country=unique(pos_all$country) #17 different countries
neg_market=unique(neg_all$market) #5 different markets
pos_market=unique(pos_all$market) #191 different markets
neg_all=season_month%>%filter(market%in%neg_market)#11 total observations for those 5 markets
neg_all=season%>%filter(market%in%neg_market)#
neg_all=season%>%filter(market%in%neg_market&market_type=="retail")#63 total observations for those 22 markets
neg_all=season%>%filter(market%in%neg_market&market_type=="retail")#
pos_all=season_month%>%filter(market%in%pos_market)
pos_all=season%>%filter(market%in%pos_market)#
neg_all=season%>%filter(market%in%neg_market)#63 total observations for those 22 markets
neg_year=unique(neg_all$year) #8 different years
pos_year=unique(pos_all$year) #17 different years
View(neg_all)
neg_year=unique(neg_all$cropyear) #8 different years
pos_year=unique(pos_all$cropyear) #17 different years
p = ggplot()+geom_jitter(data=subset(season,market_type=="Retail"),aes(x=factor(cropyear),y=returns1*100,color=yield_kgha),size=1.0,alpha=0.75)+ #geom_hline(yintercept=0,color="red",position="identity")+
scale_color_gradient2(low="gray80",high="gray15",na.value="gray",name="Yield (kg/ha)",limits=c(0,4500))+
#scale_color_gradient2(low="chartreuse",high="darkgreen",na.value="gray",name="Yield (kg/ha)",limits=c(0,4000))+
scale_y_continuous(name="Returns to storage (%)",limits=c(-100,400),breaks=seq(-100,400,100),expand=c(0,0))+
# xlab("Year")+
scale_x_discrete(name="Year",breaks=c("2000","2004","2008","2012","2016","2020"),labels=c("2000","2004","2008","2012","2016","2020"),expand=c(0,0))+
theme(panel.grid.major = element_line(color="lightgray"),panel.grid.minor = element_blank(), panel.background = element_blank(),axis.line = element_line(color="black"),legend.position = c(1, 1),legend.justification = c(1, 1))
#geom_jitter(data=subset(time,dpct<=0),aes(x=year, y=dpct,color="red",size=yield_kgha),alpha=0.5)+
#geom_jitter(data=subset(time,dpct>0),aes(x=year,y=dpct,color="black",size=yield_kgha),alpha=0.5)+
#scale_color_manual(values=c("black","red")) +
#scale_y_continuous(name="Seasonal Returns (%)",limits=c(-100,500),breaks=seq(-100,500,100))+
# geom_text(data=time,aes(x=2010,y=450,label="High Planting Price, Low Harvest Price",color="black"),size=4)+
# geom_text(data=time,aes(x=2010,y=-95,label="High Harvest Price, Low Planting Price",color="red"),size=4)
p
box= ggplot()+geom_boxplot(data=subset(season,market_type=="Retail"),aes(x=factor(cropyear),y=returns1*100),outlier.shape=1,position="dodge") + geom_hline(yintercept=0,color="red",position="identity")+
scale_y_continuous(name="Returns to storage (%)", limits=c(-100,400),breaks=seq(-100,400,100))+ scale_x_discrete(name="Year",breaks=c("2000","2004","2008","2012","2016","2020"))+
theme(panel.grid.major = element_blank(),legend.position="none",panel.grid.minor = element_blank(), panel.background = element_blank(),axis.line = element_line(color="black"))
box
