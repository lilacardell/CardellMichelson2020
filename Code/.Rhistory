mutate(country=revalue(country,c("Gambia, The"="Gambia","Congo, Dem. Rep. of the"="Democratic Republic of the Congo","Central African Rep."="Central African Republic","C么te d'Ivoire"="Cote d'Ivoire","Mozambique, Rep. of"="Mozambique","Ethiopia, The Federal Dem. Rep. of"="Ethiopia","South Sudan, Rep. of"="South Sudan","Mauritania, Islamic Rep. of"="Mauritania","Tanzania, United Rep. of"="Tanzania","Congo, Rep. of"="Congo","Eswatini, Kingdom of"="Eswatini")))%>%
gather(mmyyyy,value,3:254)%>%
spread(rate,value)%>%
separate(mmyyyy,c("month1","year"),sep=" ")%>%
mutate(month=match(month1,month.abb),year=as.numeric(year))%>%
dplyr::rename(cpi=4)%>%
filter(country%in%clist)%>%
dplyr::select(1,3,5,4)%>%
arrange(country,year,month)
FAOSTAT_rates <- read_excel("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Data/FAOSTAT_data_3-6-2021.xlsx")%>%
dplyr::select(Area,Year,Item,Months,Value)%>%
dplyr::rename(cpi=Value,country=Area,year=Year)%>%
mutate(month=match(substr(Months,1,3),month.abb),country=revalue(country,c("C么te d'Ivoire"="Cote d'Ivoire","United Republic of Tanzania"="Tanzania")))%>%
arrange(country,year,month)%>%
filter(country %in%clist)%>%
dplyr::select(country,year,month,Item,cpi)%>%
spread(Item,cpi)%>%
dplyr::rename(cpi_gen=4)
#combine the two sets of CPI rates, FAOstat CPI are already revalued to 2015 base levels
rates_join=left_join(IFS_rates,FAOSTAT_rates,by=c("country","year","month"))
cpi=rates_join%>%
dplyr::select(1:3,5)%>%
filter(!is.na(cpi_gen))%>% #cpi_gen is already set so that the average cpi for 2015 is 100
arrange(country,year,month)%>%
dplyr::rename(cpi=cpi_gen)
#join CPI rates to price-location-season dataset
maize_geo=pls%>%
left_join(cpi,by=c("country","year","month"))%>%
mutate(price_real=price_kg*100/cpi)%>%
dplyr::select(-cpi)
rm(cpi,FAOSTAT_rates,IFS_rates,pls,rates_join,clist)
clist=unique(maize_geo$country)
#maize and total cereals
cropdata_FAO <- read_excel("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Data/FAOSTAT_cropdata_2-23-2021.xlsx")%>% #available through 2018
mutate(Area=revalue(Area,c("C么te d'Ivoire"="Cote d'Ivoire","United Republic of Tanzania"="Tanzania")),value=if_else(Unit=="hg/ha",Value/10,if_else(Unit=="tonnes",Value*1000,Value)), Element=revalue(Element,c("Area harvested"="harvestarea_ha","Yield"="yield_kgha","Production"="prod_kg")),Item=revalue(Item,c("Cereals, Total"="Cereals")))%>%
filter(Area%in%clist & Item=="Maize")%>%
dplyr::select(Area,Element,Item,Year,value)%>%
pivot_wider(names_from = c("Element","Item"),values_from=c("value"))%>%
dplyr::rename(country=1,year=2)
clist=unique(maize_geo$country)
#maize and total cereals
cropdata_FAO <- read_excel("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Data/FAOSTAT_cropdata_2-23-2021.xlsx")%>% #available through 2018
mutate(Area=revalue(Area,c("C么te d'Ivoire"="Cote d'Ivoire","United Republic of Tanzania"="Tanzania")),value=if_else(Unit=="hg/ha",Value/10,if_else(Unit=="tonnes",Value*1000,Value)), Element=revalue(Element,c("Area harvested"="harvestarea_ha","Yield"="yield_kgha","Production"="prod_kg")),Item=revalue(Item,c("Cereals, Total"="Cereals")))%>%
filter(Area%in%clist & Item=="Maize")%>%
dplyr::select(Area,Element,Item,Year,value)%>%
pivot_wider(names_from = c("Element","Item"),values_from=c("value"))%>%
dplyr::rename(country=1,year=2)
#FAS crop data
cropdata_FAS <-read_excel("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Data/psd_grains_pulses_022321.xlsx")%>%
mutate(Country_Name=revalue(Country_Name,c("Burkina"="Burkina Faso","Gambia, The"="Gambia","Congo (Kinshasa)"="Democratic Republic of the Congo")),value=if_else(Unit_Description%in%c("(1000 HA)","(MT/HA)"),Value*1000,if_else(Unit_Description=="(1000 MT)",Value*1000000,Value)),Attribute_Description=revalue(Attribute_Description,c("Area Harvested"="harvestarea_ha_FAS","Yield"="yield_kgha_FAS","Production"="prod_kg_FAS")))%>%
filter(Country_Name%in%clist&Market_Year>=2000&Commodity_Description=="Corn"&Attribute_Description%in%c("harvestarea_ha_FAS","yield_kgha_FAS","prod_kg_FAS"))%>%
dplyr::select(Country_Name,Market_Year,Month,Attribute_Description,value)%>%
spread(Attribute_Description,value)%>%
dplyr::rename(country=1,year=2,month_FAS=3)
#compare crop data from FAO and FAS
cropdata=full_join(cropdata_FAO,cropdata_FAS,by=c("country","year"))%>%
mutate(harvestarea_ha=if_else(is.finite(harvestarea_ha_Maize),harvestarea_ha_Maize,harvestarea_ha_FAS),
yield_kgha=if_else(is.finite(yield_kgha_Maize),yield_kgha_Maize,yield_kgha_FAS),
prod_kg=if_else(is.finite(prod_kg_Maize),prod_kg_Maize,prod_kg_FAS))%>%
dplyr::select(country,year,harvestarea_ha,prod_kg,yield_kgha)
#join price location season cpi data set with national annual yield data
maize_geo_crop=left_join(maize_geo,cropdata,by=c("country","year"))
#missing Niger 2020, and South Sudan pre 2012
rm(cropdata,cropdata_FAS,cropdata_FAO,maize_geo,clist)
#save final datasets
write_dta(maize_geo_crop,paste0("c:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Data/maizeprices_",format(Sys.Date(),"%d%m%y"),".dta"))
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE,
root.dir = "C:/Users/lilac2/Box/GIEWS_Project/GIEWS/R"
)
options(scipen=999,warn=-1)
set.seed(101484)
###  Check for and load Packages   ###
#writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
## Clear worksace
rm(list = ls())
gc()
## This function will check if a package is installed, and if not, install it
pkgTest  =  function(x) {
if (!require(x, character.only = TRUE))
{
install.packages(x, dep = TRUE)
if(!require(x, character.only = TRUE)) stop("Package not found")
}
}
## These lines load the required packages
packages  =  c('data.table','tidyverse','haven','foreign','stargazer','lubridate','knitr','xtable','tables','kableExtra','car','stringr','styler','readxl','magrittr','sjmisc','ggplot2','ggpubr','ggnewscale','bookdown','scales','quantmod','distr6','plyr','esquisse','forcats','ggrepel','gdata','stringdist','SparseM','quantreg','mfx','erer','margins','moments',"lemon",'rnaturalearth','DescTools','tseries','blorr')
## you can add more packages here
lapply(packages, pkgTest)
rm(packages,pkgTest)
setwd("c:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final")
maize_prices<-read_dta("./Data/maizeprices_060321.dta")
#Reminder: note h1x,h2x,p1x,p2x if planting or harvest seasons that cross the end of the year, e.g. harvest starts in Dec and ends in Jan
maize<-maize_prices%>%
filter(!is.na(price_real))%>% #mostly 2020 data and Somalia which is missing CPI data
filter(!(market=="Kirundo"&year==2015&month==1&commodity=="Maize (white) - Retail"))%>% #errors in WFP dataset
filter(!(market=="Dar Es Salaam"&year==2009&month==7&commodity=="Maize - Wholesale"))%>%
mutate(endharvest1=if_else(month==main_harvest_end,main_harvest_end,as.numeric(NA)),
endharvest2=if_else(month==second_harvest_end,second_harvest_end,as.numeric(NA)),
yyyymm=paste(year,formatC(month,width=2,flag="0"),sep="-"))%>%
mutate(monthtype1=if_else(note_p1x==0&month>=main_plant_start & month<=main_plant_end,paste0("planting1_",year),#for nonwrapped planting season
if_else(note_p1x==1&month>=main_plant_start,paste0("planting1_",year), #for months at the end of the year
if_else(note_p1x==1&month<=main_plant_end,paste0("planting1_",year-1), #assume months at the beginning of the year belong with prior year's planting season
if_else(note_h1x==0&month>=main_harvest_start & month<=main_harvest_end,paste0("harvest1_",year),#for nonwrapped harvest season
if_else(note_h1x==1&month>=main_harvest_start,paste0("harvest1_",year), #for months at the end of the year
if_else(note_h1x==1&month<=main_harvest_end,paste0("harvest1_",year-1),"")))))),#assume months at the beginning of the year belong with prior year's harvest season
monthtype2=if_else(note_p2x==0&month>=second_plant_start & month<=second_plant_end,paste0("planting2_",year), #for nonwrapped planting season
if_else(note_p2x==1&month>=second_plant_start,paste0("planting2_",year), #for months at the end of the year
if_else(note_p2x==1&month<=second_plant_end,paste0("planting2_",year-1), #for months at the beginning of the year
if_else(note_h2x==0&month>=second_harvest_start & month<=second_harvest_end,paste0("harvest2_",year),#for nonwrapped harvest season
if_else(note_h2x==1&month>=second_harvest_start,paste0("harvest2_",year), #for months at the end of the year
if_else(note_h2x==1&month<=second_harvest_end,paste0("harvest2_",year-1),"")))))))%>% #for months at the beginning of the year
separate(commodity,c("commodity","market_type"), " - ")%>%
mutate(date=parse_date_time(yyyymm,"ym"))%>%
dplyr::select(country,region,market,lat,lon,commodity,market_type,currency,year,month,price_real,yield_kgha,monthtype1,monthtype2,note_1,note_2,endharvest1,endharvest2,date)
yield=maize%>%
dplyr::select(country,year,yield_kgha)%>%
group_by(country,year)%>%
slice(1)%>%
ungroup()
#Note_1/2==1 means main/second planting season occurs before main/second harvest season in a calendar year,as analysis is harvest==>planting/lean, so shift planting season crop year -1
con1 = maize%>%
separate(monthtype1,c("monthtype1","cropyear"),"_")%>%
mutate(cropyear=as.numeric(cropyear))%>%
filter(!is.na(cropyear))%>% #find all the planting or harvest months for the main season
arrange(country,region,commodity,market_type,market,year,month)%>%
group_by(country,region,commodity,market_type,market,cropyear,monthtype1)%>% #group by crop year to find the price within harvest/planting months for that crop year
dplyr::summarise(minprice=min(price_real,na.rm=TRUE),maxprice=max(price_real,na.rm=TRUE),
endprice=last(price_real,na.rm=TRUE),note_1=mean(note_1))%>%
ungroup()%>%
mutate(cropyear=if_else(note_1==1 & monthtype1=="planting1",cropyear-1,cropyear))%>% #shift planting season back for crossed crop years so that returns are from harvest to subsequent planting season
unite("temp",c("country","region","market","commodity","market_type"),sep="_")%>%
pivot_wider(names_from = monthtype1,values_from=c("minprice","maxprice","endprice"))%>%
dplyr::rename(hmin1=minprice_harvest1,hend1=endprice_harvest1,
pmax1=maxprice_planting1)%>%
dplyr::select(temp,cropyear,hmin1,hend1,pmax1)%>%
mutate(returns1_c=(pmax1-hmin1)/hmin1,returns1=(pmax1-hend1)/hend1,
noarb1_c=if_else(pmax1<=hmin1,1,0),noarb1=if_else(pmax1<=hend1,1,0))%>% #calculate returns from last harvest month and minimum harvest price
filter(!is.na(returns1))
#~7500 observations
#repeat for second maize season
con2 = maize%>%
separate(monthtype2,c("monthtype2","cropyear"),"_")%>%
mutate(cropyear=as.numeric(cropyear))%>%
filter(!is.na(cropyear))%>% #find all the planting or harvest months for the second season
arrange(country,region,commodity,market_type,market,year,month)%>%
group_by(country,region,commodity,market_type,market,cropyear,monthtype2)%>% #group by crop year to find the price within harvest/planting months for that crop year
dplyr::summarise(minprice=min(price_real,na.rm=TRUE),maxprice=max(price_real,na.rm=TRUE),
endprice=last(price_real,na.rm=TRUE),note_2=mean(note_2))%>%
ungroup()%>%
mutate(cropyear=if_else(note_2==1 & monthtype2=="planting2",cropyear-1,cropyear))%>% #shift planting season back for crossed crop years so that returns are from harvest to subsequent planting season
unite("temp",c("country","region","market","commodity","market_type"),sep="_")%>%
pivot_wider(names_from = monthtype2,values_from=c("minprice","maxprice","endprice"))%>%
dplyr::rename(hmin2=minprice_harvest2,hend2=endprice_harvest2,
pmax2=maxprice_planting2)%>%
dplyr::select(temp,cropyear,hmin2,hend2,pmax2)%>%
mutate(returns2_c=(pmax2-hmin2)/hmin2,returns2=(pmax2-hend2)/hend2,
noarb2_c=if_else(pmax2<=hmin2,1,0),noarb2=if_else(pmax2<=hend2,1,0))%>% #calculate returns from last harvest month and minimum harvest price
filter(!is.na(returns2))
#~2000 observations
returns_con=full_join(con1,con2,by=c("temp","cropyear"))%>%
separate("temp",c("country","region","market","commodity","market_type"),sep="_")%>%
arrange(country,region,market,commodity,market_type,cropyear)%>%
left_join(yield,by=c("country","cropyear"="year"))
rm(con1,con2,yield)
#isolate the month of harvest end for the main season and determine the price quintile for the country and market type
hend1=maize%>%
filter(is.finite(endharvest1))%>%
mutate(hend_date1=date,hend_price1=price_real)%>%
dplyr::select(country,region,market,commodity,market_type,contains("hend"))%>%
group_by(country,market_type)%>%
dplyr::mutate(z_h1=scale(hend_price1),h1_d=as.factor(paste0("d",ntile(hend_price1,10))),h1_q=paste0("q",ntile(hend_price1,5)))%>%
ungroup()
decile=c("d1","d2","d3","d4","d5","d6","d7","d8","d9","d10")
hend1$h1_d<-reorder.factor(hend1$h1_d,new.order=decile)
#isolate the month of harvest end for the second season and determine the price quintile for the country and market type
hend2=maize%>%
filter(is.finite(endharvest2))%>%
mutate(hend_date2=date,hend_price2=price_real)%>%
dplyr::select(country,region,market,commodity,market_type,contains("hend"))%>%
group_by(country,market_type)%>%
dplyr::mutate(z_h2=scale(hend_price2),h2_d=as.factor(paste0("d",ntile(hend_price2,10))),h2_q=paste0("q",ntile(hend_price2,5)))%>%
ungroup()
hend2$h2_d<-reorder.factor(hend2$h2_d,new.order=decile)
#rejoin the harvest month end and calculate returns for every month from the harvest end, keeping only the months within a year after harvest, and calculate returns
returns_dur1=maize%>%
left_join(hend1,by=c("country","region","market","commodity","market_type"))%>%
mutate(duration1=interval(hend_date1,date),returns1=(price_real-hend_price1)/hend_price1,arb1=if_else(price_real>hend_price1,1,0))%>%
mutate(duration1=duration1%/%months(1),noarb1=if_else(arb1==0,1,0))%>%
filter(duration1%in%1:12)%>%
dplyr::select(-lat,-lon,-currency,-note_1,-note_2,-endharvest1,-endharvest2,-monthtype1,-monthtype2)
#repeat for second season
returns_dur2=maize%>%
left_join(hend2,by=c("country","region","market","commodity","market_type"))%>%
mutate(duration2=interval(hend_date2,date),returns2=(price_real-hend_price2)/hend_price2,arb2=if_else(price_real>hend_price2,1,0))%>%
mutate(duration2=duration2%/%months(1),noarb2=if_else(arb2==0,1,0))%>%
filter(duration2%in%1:12)%>%
dplyr::select(-lat,-lon,-currency,-note_1,-note_2,-endharvest1,-endharvest2,-monthtype1,-monthtype2)
#rejoin the returns
returns_dur=full_join(returns_dur1,returns_dur2,by=c("country","region","market","commodity","market_type","year","month","price_real","yield_kgha","date"))%>%
arrange(country,region,market,commodity,year,month)
rm(hend1,hend2,returns_dur1,returns_dur2)
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/")
markets=maize%>%
dplyr::select(country,market,market_type,lat,lon)%>%
mutate(country=revalue(country,c("DR Congo"="Democratic Republic of the Congo","CAR"="Central African Republic")))
countries=markets%>%
group_by(country)%>%
dplyr::summarise(across(lat:lon,mean))
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(data = world) +
geom_sf(fill="antiquewhite") +
geom_point(data=markets, aes(x = lon, y = lat,fill=market_type), size = 1,
shape = 23)+
geom_label_repel(data = countries, aes(x=lon,y=lat, label = country), size =2,nudge_x= 0.15,
direction    = "y",
segment.size = 0.2)+
coord_sf(xlim = c(-20,50), ylim = c(-35, 25), expand = FALSE)+
theme(panel.grid.major = element_line(color = gray(0.5), linetype = "dashed",
size = 0.25), panel.background = element_rect(fill = "aliceblue"),
legend.position=c(0.35,0.35),legend.background = element_rect(fill="aliceblue"),legend.title=element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),axis.title.x=element_blank(),
axis.text.y=element_blank(),axis.ticks.y=element_blank(),axis.title.y=element_blank())
ggsave("market_map.PNG",width=12,height=9)
rm(markets,countries,world)
duration1=returns_dur%>%
filter(is.finite(returns1))%>%
group_by(country,region,commodity,market_type,market,duration1)%>%
filter(n()>2)%>%#Mauritania drops out
ungroup()%>%
group_by(country,commodity,market_type,duration1)%>%
filter(length(unique(market))>2)%>%
ungroup()
#Duration (MARKET LEVEL)
duration1_mkt=duration1%>%
group_by(country,region,commodity,market_type,market,duration1)%>%
dplyr::summarise(returns_m=mean(returns1),
n_season=n(),n_neg=sum(noarb1))%>%
ungroup()%>%
mutate(pct_season=n_neg/n_season)%>%
dplyr::select(-n_neg)
## Seasonal returns for primary and second maize season data set, keep markets with at least three crop years and countries with at least three markets
season1=returns_con%>%
filter(is.finite(returns1))%>%
group_by(country,region,commodity,market_type,market)%>%
filter(n()>2)%>%#Mauritania drops out
ungroup()%>%
group_by(country,region,commodity,market_type)%>%
filter(length(unique(market))>2)%>%
ungroup()%>%
dplyr::select(1:6,hmin1,pmax1,returns1,returns1_c,noarb1,noarb1_c,yield_kgha)
season2=returns_con%>%
filter(is.finite(returns2))%>%
group_by(country,commodity,market_type,market)%>%
filter(n()>2)%>%#Mauritania drops out
ungroup()%>%
group_by(country,commodity,market_type)%>%
filter(length(unique(market))>2)%>%
ungroup()%>%
dplyr::select(1:6,hmin2,pmax2,returns2,returns2_c,noarb2,noarb2_c,yield_kgha)
season=season1%>%
full_join(season2,by=c("country","region","commodity","market","market_type","yield_kgha","cropyear"))
#Seasonal returns (MARKET LEVEL)
season_mkt=season%>%
group_by(country,region,commodity,market_type,market)%>%
dplyr::summarise(across(starts_with("returns"),list(e=mean),na.rm=TRUE,.names = "{.fn}.{.col}"),
across(starts_with("noarb"),~sum(.x,na.rm=TRUE),.names = "n_season_{.col}"),
n.yrs1=length(cropyear[is.finite(returns1)]),n.yrs2=length(cropyear[is.finite(returns2)]))%>%
ungroup()%>%
mutate(pct_season1=n_season_noarb1/n.yrs1,pct_season1_c=n_season_noarb1_c/n.yrs1,
pct_season2=n_season_noarb2/n.yrs2,pct_season2_c=n_season_noarb2_c/n.yrs2)%>%
dplyr::select(-contains("n_"))
## Duration (FULL SET) data set for primary maize season, keep markets with at least two years of data for each duration and countries with at least three markets
duration1=returns_dur%>%
filter(is.finite(returns1))%>%
group_by(country,region,commodity,market_type,market,duration1)%>%
filter(n()>1)%>%#Mauritania drops out
ungroup()%>%
group_by(country,commodity,market_type,duration1)%>%
filter(length(unique(market))>2)%>%
ungroup()
#Duration (MARKET LEVEL)
duration1_mkt=duration1%>%
group_by(country,region,commodity,market_type,market,duration1)%>%
dplyr::summarise(returns_m=mean(returns1),
n_season=n(),n_neg=sum(noarb1))%>%
ungroup()%>%
mutate(pct_season=n_neg/n_season)%>%
dplyr::select(-n_neg)
## Seasonal returns for primary and second maize season data set, keep markets with at least two crop years and countries with at least three markets
season1=returns_con%>%
filter(is.finite(returns1))%>%
group_by(country,region,commodity,market_type,market)%>%
filter(n()>1)%>%#Mauritania drops out
ungroup()%>%
group_by(country,region,commodity,market_type)%>%
filter(length(unique(market))>2)%>%
ungroup()%>%
dplyr::select(1:6,hmin1,pmax1,returns1,returns1_c,noarb1,noarb1_c,yield_kgha)
season2=returns_con%>%
filter(is.finite(returns2))%>%
group_by(country,commodity,market_type,market)%>%
filter(n()>2)%>%#Mauritania drops out
ungroup()%>%
group_by(country,commodity,market_type)%>%
filter(length(unique(market))>2)%>%
ungroup()%>%
dplyr::select(1:6,hmin2,pmax2,returns2,returns2_c,noarb2,noarb2_c,yield_kgha)
season=season1%>%
full_join(season2,by=c("country","region","commodity","market","market_type","yield_kgha","cropyear"))
#Seasonal returns (MARKET LEVEL)
season_mkt=season%>%
group_by(country,region,commodity,market_type,market)%>%
dplyr::summarise(across(starts_with("returns"),list(e=mean),na.rm=TRUE,.names = "{.fn}.{.col}"),
across(starts_with("noarb"),~sum(.x,na.rm=TRUE),.names = "n_season_{.col}"),
n.yrs1=length(cropyear[is.finite(returns1)]),n.yrs2=length(cropyear[is.finite(returns2)]))%>%
ungroup()%>%
mutate(pct_season1=n_season_noarb1/n.yrs1,pct_season1_c=n_season_noarb1_c/n.yrs1,
pct_season2=n_season_noarb2/n.yrs2,pct_season2_c=n_season_noarb2_c/n.yrs2)%>%
dplyr::select(-contains("n_"))
View(season_mkt)
pctp=function(x){
y=mean(x[x>0],na.rm=TRUE)
}
pctn=function(x){
y=mean(x[x<=0],na.rm=TRUE)
}
#Seasonal returns (COUNTRYLEVEL)
season_country=season%>%
group_by(country,commodity,market_type)%>%
dplyr::summarise(across(starts_with("returns"),list(e=mean,pos=~pctp(.x),neg=~pctn(.x)),na.rm=TRUE,.names = "{.fn}.{.col}"),
across(starts_with("noarb"),~sum(.x,na.rm=TRUE),.names = "n_season_{.col}"),
n.mkt1=n_distinct(market[is.finite(returns1)]),n.mkt2=n_distinct(market[is.finite(returns2)]),
n.yrs1=length(market[is.finite(returns1)]),n.yrs2=length(market[is.finite(returns2)]))%>%
ungroup()%>%
mutate(pct_season1=n_season_noarb1/n.yrs1,pct_season1_c=n_season_noarb1_c/n.yrs1,
pct_season2=n_season_noarb2/n.yrs2,pct_season2_c=n_season_noarb2_c/n.yrs2)%>%
dplyr::select(-starts_with("n_"))
#make a list of years covered
all_years=season%>%
arrange(country,market_type,cropyear)%>%
group_by(country,market_type)%>%
dplyr::summarise(minyr=min(cropyear),maxyr=max(cropyear))%>%
mutate(years=paste(minyr,maxyr,sep="-"))%>%
dplyr::select(country,market_type,years)
#add list of years to country data
season_country=season_country%>%
left_join(all_years,by=c("country","market_type"))%>%
dplyr::select(country,commodity,market_type,years,contains("1"),contains("2"))
View(season_country)
install.packages("dplyr")
detach("package:dplyr", unload = TRUE)
library(dplyr)
install.packages("dplyr")
## Duration (FULL SET) data set for primary maize season, keep markets with at least two years of data for each duration and countries with at least three markets
duration1=returns_dur%>%
filter(is.finite(returns1))%>%
group_by(country,region,commodity,market_type,market,duration1)%>%
filter(n()>1)%>%#Mauritania drops out
ungroup()%>%
group_by(country,commodity,market_type,duration1)%>%
filter(length(unique(market))>1)%>%
ungroup()
#Duration (MARKET LEVEL)
duration1_mkt=duration1%>%
group_by(country,region,commodity,market_type,market,duration1)%>%
dplyr::summarise(returns_m=mean(returns1),
n_season=n(),n_neg=sum(noarb1))%>%
ungroup()%>%
mutate(pct_season=n_neg/n_season)%>%
dplyr::select(-n_neg)
## Seasonal returns for primary and second maize season data set, keep markets with at least two crop years and countries with at least three markets
season1=returns_con%>%
filter(is.finite(returns1))%>%
group_by(country,region,commodity,market_type,market)%>%
filter(n()>1)%>%#Mauritania drops out
ungroup()%>%
group_by(country,region,commodity,market_type)%>%
filter(length(unique(market))>1)%>%
ungroup()%>%
dplyr::select(1:6,hmin1,pmax1,returns1,returns1_c,noarb1,noarb1_c,yield_kgha)
season2=returns_con%>%
filter(is.finite(returns2))%>%
group_by(country,commodity,market_type,market)%>%
filter(n()>2)%>%#Mauritania drops out
ungroup()%>%
group_by(country,commodity,market_type)%>%
filter(length(unique(market))>1)%>%
ungroup()%>%
dplyr::select(1:6,hmin2,pmax2,returns2,returns2_c,noarb2,noarb2_c,yield_kgha)
season=season1%>%
full_join(season2,by=c("country","region","commodity","market","market_type","yield_kgha","cropyear"))
#Seasonal returns (MARKET LEVEL)
season_mkt=season%>%
group_by(country,region,commodity,market_type,market)%>%
dplyr::summarise(across(starts_with("returns"),list(e=mean),na.rm=TRUE,.names = "{.fn}.{.col}"),
across(starts_with("noarb"),~sum(.x,na.rm=TRUE),.names = "n_season_{.col}"),
n.yrs1=length(cropyear[is.finite(returns1)]),n.yrs2=length(cropyear[is.finite(returns2)]))%>%
ungroup()%>%
mutate(pct_season1=n_season_noarb1/n.yrs1,pct_season1_c=n_season_noarb1_c/n.yrs1,
pct_season2=n_season_noarb2/n.yrs2,pct_season2_c=n_season_noarb2_c/n.yrs2)%>%
dplyr::select(-contains("n_"))
#%>%dplyr::rename(n_season=n.returns1)
#873 markets
pctp=function(x){
y=mean(x[x>0],na.rm=TRUE)
}
pctn=function(x){
y=mean(x[x<=0],na.rm=TRUE)
}
#Seasonal returns (COUNTRYLEVEL)
season_country=season%>%
group_by(country,commodity,market_type)%>%
dplyr::summarise(across(starts_with("returns"),list(e=mean,pos=~pctp(.x),neg=~pctn(.x)),na.rm=TRUE,.names = "{.fn}.{.col}"),
across(starts_with("noarb"),~sum(.x,na.rm=TRUE),.names = "n_season_{.col}"),
n.mkt1=n_distinct(market[is.finite(returns1)]),n.mkt2=n_distinct(market[is.finite(returns2)]),
n.yrs1=length(market[is.finite(returns1)]),n.yrs2=length(market[is.finite(returns2)]))%>%
ungroup()%>%
mutate(pct_season1=n_season_noarb1/n.yrs1,pct_season1_c=n_season_noarb1_c/n.yrs1,
pct_season2=n_season_noarb2/n.yrs2,pct_season2_c=n_season_noarb2_c/n.yrs2)%>%
dplyr::select(-starts_with("n_"))
#make a list of years covered
all_years=season%>%
arrange(country,market_type,cropyear)%>%
group_by(country,market_type)%>%
dplyr::summarise(minyr=min(cropyear),maxyr=max(cropyear))%>%
mutate(years=paste(minyr,maxyr,sep="-"))%>%
dplyr::select(country,market_type,years)
#add list of years to country data
season_country=season_country%>%
left_join(all_years,by=c("country","market_type"))%>%
dplyr::select(country,commodity,market_type,years,contains("1"),contains("2"))
View(season_country)
View(duration1_mkt)
View(maize)
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
include = FALSE,
root.dir = "C:/Users/lilac2/Box/GIEWS_Project/GIEWS/R"
)
options(scipen=999,warn=-1)
set.seed(101484)
###  Check for and load Packages   ###
#writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
## Clear worksace
rm(list = ls())
gc()
## This function will check if a package is installed, and if not, install it
pkgTest  =  function(x) {
if (!require(x, character.only = TRUE))
{
install.packages(x, dep = TRUE)
if(!require(x, character.only = TRUE)) stop("Package not found")
}
}
## These lines load the required packages
packages  =  c('data.table','tidyverse','haven','foreign','stargazer','lubridate','knitr','xtable','tables','kableExtra','car','stringr','styler','readxl','magrittr','sjmisc','ggplot2','ggpubr','ggnewscale','bookdown','scales','quantmod','distr6','plyr','esquisse','forcats','ggrepel','gdata','stringdist','SparseM','quantreg','mfx','erer','margins','moments',"lemon",'rnaturalearth','DescTools','tseries','blorr')
## you can add more packages here
lapply(packages, pkgTest)
rm(packages,pkgTest)
setwd("c:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final")
maize_prices<-read_dta("./Data/maizeprices_060321.dta")
#Reminder: note h1x,h2x,p1x,p2x if planting or harvest seasons that cross the end of the year, e.g. harvest starts in Dec and ends in Jan
maize<-maize_prices%>%
filter(!is.na(price_real))%>% #mostly 2020 data and Somalia which is missing CPI data
filter(!(market=="Kirundo"&year==2015&month==1&commodity=="Maize (white) - Retail"))%>% #errors in WFP dataset
filter(!(market=="Dar Es Salaam"&year==2009&month==7&commodity=="Maize - Wholesale"))%>%
mutate(endharvest1=if_else(month==main_harvest_end,main_harvest_end,as.numeric(NA)),
endharvest2=if_else(month==second_harvest_end,second_harvest_end,as.numeric(NA)),
yyyymm=paste(year,formatC(month,width=2,flag="0"),sep="-"))%>%
mutate(monthtype1=if_else(note_p1x==0&month>=main_plant_start & month<=main_plant_end,paste0("planting1_",year),#for nonwrapped planting season
if_else(note_p1x==1&month>=main_plant_start,paste0("planting1_",year), #for months at the end of the year
if_else(note_p1x==1&month<=main_plant_end,paste0("planting1_",year-1), #assume months at the beginning of the year belong with prior year's planting season
if_else(note_h1x==0&month>=main_harvest_start & month<=main_harvest_end,paste0("harvest1_",year),#for nonwrapped harvest season
if_else(note_h1x==1&month>=main_harvest_start,paste0("harvest1_",year), #for months at the end of the year
if_else(note_h1x==1&month<=main_harvest_end,paste0("harvest1_",year-1),"")))))),#assume months at the beginning of the year belong with prior year's harvest season
monthtype2=if_else(note_p2x==0&month>=second_plant_start & month<=second_plant_end,paste0("planting2_",year), #for nonwrapped planting season
if_else(note_p2x==1&month>=second_plant_start,paste0("planting2_",year), #for months at the end of the year
if_else(note_p2x==1&month<=second_plant_end,paste0("planting2_",year-1), #for months at the beginning of the year
if_else(note_h2x==0&month>=second_harvest_start & month<=second_harvest_end,paste0("harvest2_",year),#for nonwrapped harvest season
if_else(note_h2x==1&month>=second_harvest_start,paste0("harvest2_",year), #for months at the end of the year
if_else(note_h2x==1&month<=second_harvest_end,paste0("harvest2_",year-1),"")))))))%>% #for months at the beginning of the year
separate(commodity,c("commodity","market_type"), " - ")%>%
mutate(date=parse_date_time(yyyymm,"ym"))%>%
dplyr::select(country,region,market,lat,lon,commodity,market_type,currency,year,month,price_real,yield_kgha,monthtype1,monthtype2,note_1,note_2,endharvest1,endharvest2,date)
yield=maize%>%
dplyr::select(country,year,yield_kgha)%>%
group_by(country,year)%>%
slice(1)%>%
ungroup()
#Note_1/2==1 means main/second planting season occurs before main/second harvest season in a calendar year,as analysis is harvest==>planting/lean, so shift planting season crop year -1
con1 = maize%>%
separate(monthtype1,c("monthtype1","cropyear"),"_")%>%
mutate(cropyear=as.numeric(cropyear))%>%
filter(!is.na(cropyear))%>% #find all the planting or harvest months for the main season
arrange(country,region,commodity,market_type,market,year,month)%>%
group_by(country,region,commodity,market_type,market,cropyear,monthtype1)%>% #group by crop year to find the price within harvest/planting months for that crop year
dplyr::summarise(minprice=min(price_real,na.rm=TRUE),maxprice=max(price_real,na.rm=TRUE),
endprice=last(price_real,na.rm=TRUE),note_1=mean(note_1))%>%
ungroup()%>%
mutate(cropyear=if_else(note_1==1 & monthtype1=="planting1",cropyear-1,cropyear))%>% #shift planting season back for crossed crop years so that returns are from harvest to subsequent planting season
unite("temp",c("country","region","market","commodity","market_type"),sep="_")%>%
pivot_wider(names_from = monthtype1,values_from=c("minprice","maxprice","endprice"))%>%
dplyr::rename(hmin1=minprice_harvest1,hend1=endprice_harvest1,
pmax1=maxprice_planting1)%>%
dplyr::select(temp,cropyear,hmin1,hend1,pmax1)%>%
mutate(returns1_c=(pmax1-hmin1)/hmin1,returns1=(pmax1-hend1)/hend1,
noarb1_c=if_else(pmax1<=hmin1,1,0),noarb1=if_else(pmax1<=hend1,1,0))%>% #calculate returns from last harvest month and minimum harvest price
filter(!is.na(returns1))
